import './listeners/index';
import { app, BrowserWindow, Menu, nativeImage, Tray } from 'electron';
import * as path from 'path';
import { createMainWindow } from './helpers/AppLifeCycleHelper';
import { launchUpdatePackageJob } from './jobs/PackageJobs';

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require('electron-squirrel-startup')) {
  app.quit();
}

export let mainWindow: BrowserWindow | undefined;

export const ressourcePathFolder = path.join(__dirname, 'ressources');

function quitApp(): void {
  console.log('Exiting app');
  app.quit();
}

function reopenApp(): void {
  console.log('Reopen app');
  if (!mainWindow || mainWindow.isDestroyed()) {
    console.log('Create a main window');
    mainWindow = createMainWindow(
      MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      MAIN_WINDOW_WEBPACK_ENTRY,
    );
  } else {
    console.log('Push main window to front');
    mainWindow.show();
  }
}

const singleInstanceLock = app.requestSingleInstanceLock();
if (!singleInstanceLock) {
  app.quit();
} else {
  app.on('second-instance', () => {
    reopenApp();
  });
}

app.on('ready', () => {
  mainWindow = createMainWindow(
    MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
    MAIN_WINDOW_WEBPACK_ENTRY,
  );

  // Set Tray Icon
  const icon = nativeImage.createFromPath(
    path.join(ressourcePathFolder, 'logo.png'),
  );
  const trayIcon = new Tray(icon);
  trayIcon.setToolTip('NPN');

  // Create Tray menu
  const trayMenu = Menu.buildFromTemplate([
    {
      label: 'Open',
      type: 'normal',
      click: reopenApp,
    },
    {
      label: 'Quit',
      type: 'normal',
      click: quitApp,
    },
  ]);
  trayIcon.setContextMenu(trayMenu);

  // Start Jobs
  launchUpdatePackageJob();
});

app.on('window-all-closed', () => {
  console.log('All window closed, staying in background...');
});

app.on('activate', () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    mainWindow = createMainWindow(
      MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      MAIN_WINDOW_WEBPACK_ENTRY,
    );
  }
});
